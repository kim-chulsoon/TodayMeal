<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>회원가입</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="/static/css/register.css" />
  </head>
  <body>
    <header>
      <a href="#" onClick="history.back()" class="mobile">
        <img src="/static/img/icons/Arrow - Left.png" alt="arrow" />
      </a>
      <p class="logo mobile">정보수정</p>
      <a href="/" class="web logoA">
        <img src="/static/img/logo/b_logo.png" alt="logo" class="logoImg" />
        <span>오늘은 뭐 먹지?</span>
      </a>
      <div class="menu web">
        <a href="/users/login">로그인</a>
        <a href="/users/register">회원가입</a>
      </div>
    </header>
    <main>
      <div class="regiDiv">
        <form name="edit" class="edit" onsubmit="return editClick()">
          <div class="profileSection">
            <img
              src="/static/img/icons/profile.png"
              alt="프로필 이미지"
              class="profileImg"
              id="profileImage"
            />
          </div>

          <div class="dynamic">
            <input type="file" name="dynamicFile" id="dynamicFile" />
            <button type="button" class="userProfileB" onclick="fileUpload()">
              사진 업로드
            </button>
          </div>

          <input
            type="text"
            name="userId2"
            class="userId2"
            placeholder=" 아이디"
            readonly
          />

          <div class="pwBox">
            <input
              type="password"
              name="userPw1"
              class="userPw"
              id="userPw1"
              placeholder="  패스워드"
              required
            />
          </div>
          <p class="pwP">영문 소/대문자, 숫자, !@#$ 포함 5 ~ 15자</p>

          <div class="pwBox">
            <input
              type="password"
              name="userPw2"
              class="userPw"
              id="userPw2"
              placeholder="  패스워드 확인"
              required
            />
          </div>

          <input
            type="text"
            name="userName"
            class="userName"
            placeholder="  이름"
            required
          />
          <br />
          <input
            type="date"
            name="userBirth"
            class="Birth"
            value="1993-03-03"
            min="1970-01-01"
            max="2018-12-31"
            required
          />
          <br />
          <button type="button" class="registerB" onclick="editClick()">
            수정
          </button>
        </form>
      </div>
    </main>
    <footer class="web">
      <p>Copyright 2024. Team 2TheCode All rights reserved.</p>
    </footer>
    <script>
      document.addEventListener("DOMContentLoaded", async () => {
        const token = localStorage.getItem("authToken");

        if (!token) {
          alert("로그인이 필요합니다.");
          return;
        }

        try {
          const res = await axios.get("/users/details/", {
            headers: { Authorization: `Bearer ${token}` },
          });

          if (res.data.success) {
            document.querySelector(".userId2").value = res.data.user.userId;
            document.querySelector(".userName").value = res.data.user.name;
            document.querySelector(".Birth").value = res.data.user.birthdate;
            document.querySelector(".profileImg").src =
              res.data.user.profileImage;
          } else {
            alert("유저 정보를 불러올 수 없습니다. 다시 로그인해주세요.");
          }
        } catch (err) {
          console.error("Error fetching user details:", err);
          alert("서버 오류 발생. 다시 시도해주세요.");
        }
      });

      //파일 업로드
      function fileUpload() {
        const fileInput = document.getElementById("dynamicFile");
        const userId = document.querySelector(".userId2").value;
        if (!fileInput.files.length) {
          alert("업로드할 파일을 선택하세요.");
          return;
        }
        const file = fileInput.files[0];
        const formData = new FormData();
        formData.append("dynamicFile", file);
        formData.append("userId", userId);

        axios
          .post("/users/dynamicUpload", formData, {
            headers: { "Content-Type": "multipart/form-data" },
          })
          .then((res) => {
            document.querySelector("#profileImage").src = "\\" + res.data;
            console.log("파일경로", "/" + res.data);
          })
          .catch((err) => {
            console.error("File upload error:", err);
            alert("파일 업로드에 실패했습니다.");
          });
      }

      async function editClick() {
        try {
          const form = document.forms["edit"];
          const userId = form.userId2.value.trim();
          const userPw1 = form.userPw1.value;
          const userPw2 = form.userPw2.value;
          const userName = form.userName.value.trim();
          const userBirth = form.userBirth.value;

          if (!userId || !userPw1 || !userPw2 || !userName || !userBirth) {
            alert("모든 항목을 입력해주세요");
            return false;
          }

          const regPw =
            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$])[A-Za-z\d!@#$]{5,15}$/;
          if (!regPw.test(userPw1)) {
            alert(
              "비밀번호는 영문 소/대문자, 숫자, !@#$ 포함 5 ~ 15자여야 합니다.",
            );
            return false;
          }

          if (userPw1 !== userPw2) {
            alert("비밀번호가 일치하지 않습니다.");
            return false;
          }

          const res = await axios.patch("/users", {
            userId,
            newUserPw: userPw1,
            newName: userName,
            newBirthdate: userBirth,
          });

          if (res.data.success) {
            alert("정보수정 성공");
            form.reset();
            document.location.href = "/";
          } else {
            alert("정보수정 실패했습니다.");
          }
        } catch (err) {
          console.error("Error updating user:", err);
          alert("서버 오류 발생. 다시 시도해주세요.");
        }
      }
    </script>
  </body>
</html>
